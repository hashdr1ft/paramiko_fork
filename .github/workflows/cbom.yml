name: CBOMKit Scan and Push to Wazuh

on:
  workflow_dispatch:      # Manual run
  schedule:
    - cron: "0 1 * * *"   # Daily at 1 AM UTC

jobs:
  cbom-scan:
    name: CBOMKit Generation & Push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Java Project (if applicable)
        run: mvn clean package -DskipTests=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run CBOMKit GitHub Action
        id: cbom
        uses: PQCA/cbomkit-action@v2.1.0

      - name: Upload CBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "CBOM"
          path: ${{ steps.cbom.outputs.pattern }}
          if-no-files-found: warn

      - name: Parse CBOM and Push to Elasticsearch
        env:
          ELASTIC_URL: ${{ secrets.ELASTIC_URL }}
          ELASTIC_USER: ${{ secrets.ELASTIC_USER }}
          ELASTIC_PASS: ${{ secrets.ELASTIC_PASS }}
        run: |
          pip install requests
          python3 <<EOF
import os, json, requests

# Load the CBOM file
with open("${{ steps.cbom.outputs.pattern }}", "r") as f:
    cbom = json.load(f)

assets = cbom.get("cryptographic_assets", [])
url = os.environ["ELASTIC_URL"]
auth = (os.environ["ELASTIC_USER"], os.environ["ELASTIC_PASS"])

for item in assets:
    doc = {
        "repo": "${{ github.repository }}",
        "file": item.get("location"),
        "algorithm": item.get("algorithm"),
        "library": item.get("library"),
        "pq_safe": item.get("pq_safe", False),
        "risk_level": item.get("risk_level", "unknown"),
        "timestamp": "${{ github.event.repository.updated_at }}"
    }
    res = requests.post(f"{url}/cbomkit-reports/_doc", json=doc, auth=auth)
    print(f"[ES] {res.status_code}: {res.text}")
EOF
