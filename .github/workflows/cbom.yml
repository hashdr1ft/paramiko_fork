name: CBOMKit Scan and Push to Wazuh

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  cbom-scan:
    runs-on: ubuntu-latest
    name: Generate CBOM

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Java project
        id: detect
        run: |
          echo "is_java=$(if [ -f pom.xml ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      # Java path: build & PQCA action
      - name: Build with Maven
        if: steps.detect.outputs.is_java == 'true'
        run: mvn clean package -DskipTests=true

      - name: Create CBOM (Java)
        if: steps.detect.outputs.is_java == 'true'
        uses: PQCA/cbomkit-action@v2.1.0
        id: cbom_java

      # Non-Java path: CBOMKit CLI
      - name: Log in to GHCR
        if: steps.detect.outputs.is_java != 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull CBOMKit CLI image
        if: steps.detect.outputs.is_java != 'true'
        run: docker pull ghcr.io/ibm/cbomkit-cli:latest

      - name: Run CBOMKit CLI â†’ JSON
        if: steps.detect.outputs.is_java != 'true'
        run: |
          mkdir -p cbom
          docker run --rm \
            -v "${{ github.workspace }}:/src" \
            ghcr.io/ibm/cbomkit-cli:latest \
            /src --format json > cbom/cbom_raw.json
        id: cbom_cli

      # Upload whichever JSON CBOMs were produced
      - name: Upload CBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: cbom-json
          path: |
            ${{ steps.cbom_java.outputs.pattern }}
            cbom/**/*.json
          if-no-files-found: warn

  push-cbom:
    needs: cbom-scan
    runs-on: ubuntu-latest
    name: Push CBOM to Elasticsearch

    permissions:
      contents: read

    steps:
      - name: Download CBOM JSON files
        uses: actions/download-artifact@v4
        with:
          name: cbom-json

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python requests
        run: pip install requests

      - name: Push to Elasticsearch
        env:
          ELASTIC_URL: ${{ secrets.ELASTIC_URL }}
          ELASTIC_USER: ${{ secrets.ELASTIC_USER }}
          ELASTIC_PASS: ${{ secrets.ELASTIC_PASS }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          python3 - << 'EOF'
          import glob, json, os, requests

          files = glob.glob("*.json")
          if not files:
              print("No CBOM JSON found. Exiting.")
              exit(1)

          url = os.environ['ELASTIC_URL']
          auth = (os.environ['ELASTIC_USER'], os.environ['ELASTIC_PASS'])
          repo = os.environ['GITHUB_REPOSITORY']

          for fname in files:
              with open(fname) as f:
                  cbom = json.load(f)
              for asset in cbom.get('cryptographic_assets', []):
                  doc = {
                      'repo': repo,
                      'file': asset.get('location'),
                      'algorithm': asset.get('algorithm'),
                      'library': asset.get('library'),
                      'pq_safe': asset.get('pq_safe', False),
                      'risk_level': asset.get('risk_level', 'unknown'),
                      'scanner': cbom.get('scanner', ''),
                      'generated_at': cbom.get('bomTimestamp', '')
                  }
                  res = requests.post(f'{url}/cbomkit-reports/_doc', json=doc, auth=auth)
                  print(fname, res.status_code, res.text)
          EOF
